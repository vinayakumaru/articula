package com.example.articula.model;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: embedding.proto

public final class Embedding {
  private Embedding() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface FloatArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FloatArray)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated float data = 1;</code>
     * @return A list containing the data.
     */
    java.util.List<Float> getDataList();
    /**
     * <code>repeated float data = 1;</code>
     * @return The count of data.
     */
    int getDataCount();
    /**
     * <code>repeated float data = 1;</code>
     * @param index The index of the element to return.
     * @return The data at the given index.
     */
    float getData(int index);

    /**
     * <code>repeated int32 shape = 2;</code>
     * @return A list containing the shape.
     */
    java.util.List<Integer> getShapeList();
    /**
     * <code>repeated int32 shape = 2;</code>
     * @return The count of shape.
     */
    int getShapeCount();
    /**
     * <code>repeated int32 shape = 2;</code>
     * @param index The index of the element to return.
     * @return The shape at the given index.
     */
    int getShape(int index);
  }
  /**
   * Protobuf type {@code FloatArray}
   */
  public  static final class FloatArray extends
      com.google.protobuf.GeneratedMessageLite<
          FloatArray, FloatArray.Builder> implements
      // @@protoc_insertion_point(message_implements:FloatArray)
      FloatArrayOrBuilder {
    private FloatArray() {
      data_ = emptyFloatList();
      shape_ = emptyIntList();
    }
    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.FloatList data_;
    /**
     * <code>repeated float data = 1;</code>
     * @return A list containing the data.
     */
    @Override
    public java.util.List<Float>
        getDataList() {
      return data_;
    }
    /**
     * <code>repeated float data = 1;</code>
     * @return The count of data.
     */
    @Override
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated float data = 1;</code>
     * @param index The index of the element to return.
     * @return The data at the given index.
     */
    @Override
    public float getData(int index) {
      return data_.getFloat(index);
    }
    private int dataMemoizedSerializedSize = -1;
    private void ensureDataIsMutable() {
      com.google.protobuf.Internal.FloatList tmp = data_;
      if (!tmp.isModifiable()) {
        data_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <code>repeated float data = 1;</code>
     * @param index The index to set the value at.
     * @param value The data to set.
     */
    private void setData(
        int index, float value) {
      ensureDataIsMutable();
      data_.setFloat(index, value);
    }
    /**
     * <code>repeated float data = 1;</code>
     * @param value The data to add.
     */
    private void addData(float value) {
      ensureDataIsMutable();
      data_.addFloat(value);
    }
    /**
     * <code>repeated float data = 1;</code>
     * @param values The data to add.
     */
    private void addAllData(
        Iterable<? extends Float> values) {
      ensureDataIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, data_);
    }
    /**
     * <code>repeated float data = 1;</code>
     */
    private void clearData() {
      data_ = emptyFloatList();
    }

    public static final int SHAPE_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList shape_;
    /**
     * <code>repeated int32 shape = 2;</code>
     * @return A list containing the shape.
     */
    @Override
    public java.util.List<Integer>
        getShapeList() {
      return shape_;
    }
    /**
     * <code>repeated int32 shape = 2;</code>
     * @return The count of shape.
     */
    @Override
    public int getShapeCount() {
      return shape_.size();
    }
    /**
     * <code>repeated int32 shape = 2;</code>
     * @param index The index of the element to return.
     * @return The shape at the given index.
     */
    @Override
    public int getShape(int index) {
      return shape_.getInt(index);
    }
    private int shapeMemoizedSerializedSize = -1;
    private void ensureShapeIsMutable() {
      com.google.protobuf.Internal.IntList tmp = shape_;
      if (!tmp.isModifiable()) {
        shape_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <code>repeated int32 shape = 2;</code>
     * @param index The index to set the value at.
     * @param value The shape to set.
     */
    private void setShape(
        int index, int value) {
      ensureShapeIsMutable();
      shape_.setInt(index, value);
    }
    /**
     * <code>repeated int32 shape = 2;</code>
     * @param value The shape to add.
     */
    private void addShape(int value) {
      ensureShapeIsMutable();
      shape_.addInt(value);
    }
    /**
     * <code>repeated int32 shape = 2;</code>
     * @param values The shape to add.
     */
    private void addAllShape(
        Iterable<? extends Integer> values) {
      ensureShapeIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, shape_);
    }
    /**
     * <code>repeated int32 shape = 2;</code>
     */
    private void clearShape() {
      shape_ = emptyIntList();
    }

    public static FloatArray parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static FloatArray parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static FloatArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static FloatArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static FloatArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static FloatArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static FloatArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static FloatArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static FloatArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static FloatArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static FloatArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static FloatArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(FloatArray prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code FloatArray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          FloatArray, Builder> implements
        // @@protoc_insertion_point(builder_implements:FloatArray)
        FloatArrayOrBuilder {
      // Construct using Embedding.FloatArray.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated float data = 1;</code>
       * @return A list containing the data.
       */
      @Override
      public java.util.List<Float>
          getDataList() {
        return java.util.Collections.unmodifiableList(
            instance.getDataList());
      }
      /**
       * <code>repeated float data = 1;</code>
       * @return The count of data.
       */
      @Override
      public int getDataCount() {
        return instance.getDataCount();
      }
      /**
       * <code>repeated float data = 1;</code>
       * @param index The index of the element to return.
       * @return The data at the given index.
       */
      @Override
      public float getData(int index) {
        return instance.getData(index);
      }
      /**
       * <code>repeated float data = 1;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(
          int index, float value) {
        copyOnWrite();
        instance.setData(index, value);
        return this;
      }
      /**
       * <code>repeated float data = 1;</code>
       * @param value The data to add.
       * @return This builder for chaining.
       */
      public Builder addData(float value) {
        copyOnWrite();
        instance.addData(value);
        return this;
      }
      /**
       * <code>repeated float data = 1;</code>
       * @param values The data to add.
       * @return This builder for chaining.
       */
      public Builder addAllData(
          Iterable<? extends Float> values) {
        copyOnWrite();
        instance.addAllData(values);
        return this;
      }
      /**
       * <code>repeated float data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      /**
       * <code>repeated int32 shape = 2;</code>
       * @return A list containing the shape.
       */
      @Override
      public java.util.List<Integer>
          getShapeList() {
        return java.util.Collections.unmodifiableList(
            instance.getShapeList());
      }
      /**
       * <code>repeated int32 shape = 2;</code>
       * @return The count of shape.
       */
      @Override
      public int getShapeCount() {
        return instance.getShapeCount();
      }
      /**
       * <code>repeated int32 shape = 2;</code>
       * @param index The index of the element to return.
       * @return The shape at the given index.
       */
      @Override
      public int getShape(int index) {
        return instance.getShape(index);
      }
      /**
       * <code>repeated int32 shape = 2;</code>
       * @param value The shape to set.
       * @return This builder for chaining.
       */
      public Builder setShape(
          int index, int value) {
        copyOnWrite();
        instance.setShape(index, value);
        return this;
      }
      /**
       * <code>repeated int32 shape = 2;</code>
       * @param value The shape to add.
       * @return This builder for chaining.
       */
      public Builder addShape(int value) {
        copyOnWrite();
        instance.addShape(value);
        return this;
      }
      /**
       * <code>repeated int32 shape = 2;</code>
       * @param values The shape to add.
       * @return This builder for chaining.
       */
      public Builder addAllShape(
          Iterable<? extends Integer> values) {
        copyOnWrite();
        instance.addAllShape(values);
        return this;
      }
      /**
       * <code>repeated int32 shape = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearShape() {
        copyOnWrite();
        instance.clearShape();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FloatArray)
    }
    @Override
    @SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new FloatArray();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            Object[] objects = new Object[] {
              "data_",
              "shape_",
            };
            String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0002\u0000\u0001$\u0002\'";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<FloatArray> parser = PARSER;
          if (parser == null) {
            synchronized (FloatArray.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<FloatArray>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:FloatArray)
    private static final FloatArray DEFAULT_INSTANCE;
    static {
      FloatArray defaultInstance = new FloatArray();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        FloatArray.class, defaultInstance);
    }

    public static FloatArray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<FloatArray> PARSER;

    public static com.google.protobuf.Parser<FloatArray> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
